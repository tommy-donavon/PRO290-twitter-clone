version: "3"

services:
  users-db:
    image: neo4j:latest
    hostname: usersdb
    container_name: usersdb
    environment:
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_apoc_uuid_enabled=true
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_connector_bolt_advertised_address=localhost:7687
      - NEO4J_dbms_allow__upgrade=true
      - NEO4J_dbms_default__database=users
      - NEO4J_AUTH=neo4j/${NEO_PASS}
    ports:
      - "7475:7474"
      - "7687:7687"
  users-api:
    image: meaty/users-api
    build:
      context: ./users-service
      dockerfile: Dockerfile
    environment:
      - DB=bolt://usersdb:7687
      - DB_USER=neo4j
      - DB_PASS=${NEO_PASS}
      - SECRET=${SECRET}
      - CONSUL_HTTP_ADDR=consul:8500
      - PORT=:8080
      - RABBIT_CONN=amqp://guest:guest@rabbit:5672/
    ports:
      - 8080
    depends_on:
      - users-db
    restart: always
  consul:
    image: consul:latest
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
  gateway: 
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    image: meaty/nginx-consul-template
    volumes: 
      - ./nginx/templates:/etc/consul-template/templates
      - ./nginx/conf:/etc/consul-template/conf/
      - ./nginx/nginx.conf:/usr/nginx/nginx.conf
  nginx-data:
    build:
      context: ./nginx
      dockerfile: Dockerfile
  gateway:
    image: seges/nginx-consul:1.9.0
    container_name: gateway
    volumes_from:
      - nginx-data
    ports:
      - 8080:80
  
  post-db:
    image: postgres:latest
    container_name: post-db
    restart: always
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - APP_DB_USER=admin
      - APP_DB_PASS=${POSTGRES_PASSWORD}
      - APP_DB_NAME=posts
    ports: 
      - '5438:5432'
    volumes: 
      - ./postsdb/config:/docker-entrypoint-initdb.d/
      # - ./postsdb/db-data:/var/lib/postgresql/data
  post-api:
    image: meaty/postapi
    build: 
      context: ./post-service
      dockerfile: Dockerfile
    environment: 
      - DSN=host=post-db user=admin password=${POSTGRES_PASSWORD} dbname=posts port=5432 sslmode=disable
      - PORT=:8080
      - CONSUL_HTTP_ADDR=consul:8500 
    ports: 
      - 8080
    depends_on: 
        - post-db
    restart: always
  notifications-api:
    image: meaty/notificationsapi
    build: 
      context: ./notifications-service
      dockerfile: Dockerfile
    environment: 
      - CONSUL_HTTP_ADDR=consul:8500 
      - PORT=:8080
      - REDIS_HOST=note-redis-store
      - REDIS_PORT=6379
      - RABBIT_CONN=amqp://guest:guest@rabbit:5672/
    ports: 
      - 8081:8080
    restart: always
  message-broker:
    image: rabbitmq:3-management
    container_name: message-broker
    hostname: rabbit 
    ports: 
      - '5672:5672'
      - '15672:15672'
  notification-db:
    image: redis:alpine
    container_name: note-redis-store
    hostname: note-redis-store
    ports: 
        - 6379:6379
